FROM mcr.microsoft.com/vscode/devcontainers/base:0-focal

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

ARG INSTALL_ZSH="false"
ARG UPGRADE_PACKAGES="false"
ARG ENABLE_NONROOT_DOCKER="true"
ARG USE_MOBY="true"
ENV DOCKER_BUILDKIT=1
ARG USERNAME=automatic
ARG USER_UID=1000
ARG USER_GID=$USER_UID
COPY library-scripts/*.sh /tmp/library-scripts/
RUN apt-get update \
    && /bin/bash /tmp/library-scripts/common-debian.sh "${INSTALL_ZSH}" "${USERNAME}" "${USER_UID}" "${USER_GID}" "${UPGRADE_PACKAGES}" "true" "true" \
    # Use Docker script from script library to set things up
    && /bin/bash /tmp/library-scripts/docker-debian.sh "${ENABLE_NONROOT_DOCKER}" "/var/run/docker-host.sock" "/var/run/docker.sock" "${USERNAME}" \
    # Clean up
    && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts/

# Setting the ENTRYPOINT to docker-init.sh will configure non-root access 
# to the Docker socket. The script will also execute CMD as needed.
ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD [ "sleep", "infinity" ]

# Configure apt and install packages
RUN apt-get update \
    && apt-get install -y --no-install-recommends apt-utils dialog 2>&1 \
    && apt-get install -y \
        iproute2 \
        procps \
        sudo \
        bash-completion \
        build-essential \
        curl \
        wget \
        software-properties-common \
        direnv \
        tzdata \
        python3-pip \
        # Neko deps
        cmake \
        ninja-build \
        pkg-config \
        libgtk2.0-dev \
        # Neko dynamic link deps
        libgc-dev \
        libpcre3-dev \
        zlib1g-dev \
        apache2-dev \
        libmysqlclient-dev \
        libsqlite3-dev \
        libmbedtls-dev \
    && echo 'eval "$(direnv hook bash)"' >> /etc/bash.bashrc \
    # install the latest git
    && add-apt-repository ppa:git-core/ppa \
    && apt-get install -y git \
    #
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

# install bazel
ENV USE_BAZEL_VERSION=4.2.1
ARG TARGETARCH
RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-linux-${TARGETARCH} -O /usr/local/bin/bazel \
    && chmod +x /usr/local/bin/bazel \
    && bazel version

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=
